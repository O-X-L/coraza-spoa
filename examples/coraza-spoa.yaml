# The SPOA server bind address
bind: 0.0.0.0:9000

# The log level configuration, one of: debug/info/warn/error/panic/fatal
log_level: info
# The log file path
log_file: /dev/stdout
# The log format, one of: console/json
log_format: console

applications:
  # name is used as key to identify the directives
  - name: sample_app
    # Get the coraza.conf from https://github.com/corazawaf/coraza
    #
    # Download the OWASP CRS from https://github.com/coreruleset/coreruleset/releases
    # and copy crs-setup.conf & the rules, plugins directories to /etc/coraza-spoa
    # Also the built-in OWASP CRS rules are available in @owasp_crs/
    directives: |
      # Include @coraza.conf-recommended
      # SecRuleEngine On
      # SecAction \
      #     "id:900990,\
      #     phase:1,\
      #     pass,\
      #     t:none,\
      #     nolog,\
      #     setvar:tx.crs_setup_version=400"
      # SecDefaultAction "phase:1,log,noauditlog,deny,status:403"
      # Include @owasp_crs/*.conf
      Include /etc/coraza-spoa/coraza.conf
      Include /etc/coraza-spoa/crs-setup.conf
      Include /etc/coraza-spoa/rules/*.conf


    # HAProxy configured to send requests only, that means no cache required
    response_check: false

    # The transaction cache lifetime in milliseconds (60000ms = 60s)
    transaction_ttl_ms: 60000

    # The log level configuration, one of: debug/info/warn/error/panic/fatal
    log_level: info
    # The log file path
    log_file: /dev/stdout
    # The log format, one of: console/json
    log_format: console

    # The maximum number of transactions which can be cached
    transaction_active_limit: 1000

    # After reaching the maximum number of transactions:
    # If true then the new transactions will be rejected with deny and status code 503
    # If false, the new transaction will be processed, ignoring the response
    transaction_active_limit_reject: false